# 2
'''


Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will be:

                  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.



'''
from hashlib import md5 as _test_md5_hash

WRONG_ANSWER_MSG = "Wrong answer. Got: UNHASHED: %s, HASHED: %s, expected: HASHED: %s. (in md5 hash, so that is not an answer)"
ANSWER = "4194eb91842c8e7e6df099ca73c38f28"

def solve() -> str:
    return "4613732"

def test():
    ret = solve()
    assert isinstance(ret, str)
    hashed = _test_md5_hash(ret.encode()).hexdigest()
    assert hashed == ANSWER, WRONG_ANSWER_MSG % (ret, hashed, ANSWER)
    print('''Tests passed. 
          You're good to go. 
          Good luck! 
          Congratulations! 
          Wow that's a lot of problems! 
          You're a genius! 
          You're a genius! 
          I love you!
                                                    - AI generated.''')

if __name__ == "__main__":
    test()
